//------------------------------------------------------------------------------
// <auto-generated>
//     Dieser Code wurde von einem Tool generiert.
//     Laufzeitversion:4.0.30319.1026
//
//     Änderungen an dieser Datei können falsches Verhalten verursachen und gehen verloren, wenn
//     der Code erneut generiert wird.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SharpServer.Localization {
    using System;
    
    
    /// <summary>
    ///   Eine stark typisierte Ressourcenklasse zum Suchen von lokalisierten Zeichenfolgen usw.
    /// </summary>
    // Diese Klasse wurde von der StronglyTypedResourceBuilder automatisch generiert
    // -Klasse über ein Tool wie ResGen oder Visual Studio automatisch generiert.
    // Um einen Member hinzuzufügen oder zu entfernen, bearbeiten Sie die .ResX-Datei und führen dann ResGen
    // mit der /str-Option erneut aus, oder Sie erstellen Ihr VS-Projekt neu.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class FtpReplies {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal FtpReplies() {
        }
        
        /// <summary>
        ///   Gibt die zwischengespeicherte ResourceManager-Instanz zurück, die von dieser Klasse verwendet wird.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("SharpServer.Localization.FtpReplies", typeof(FtpReplies).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Überschreibt die CurrentUICulture-Eigenschaft des aktuellen Threads für alle
        ///   Ressourcenzuordnungen, die diese stark typisierte Ressourcenklasse verwenden.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die &quot;{0}&quot; is the current directory ähnelt.
        /// </summary>
        internal static string CURRENT_DIRECTORY {
            get {
                return ResourceManager.GetString("CURRENT_DIRECTORY", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Directory already exists ähnelt.
        /// </summary>
        internal static string DIRECTORY_EXISTS {
            get {
                return ResourceManager.GetString("DIRECTORY_EXISTS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Directory not found ähnelt.
        /// </summary>
        internal static string DIRECTORY_NOT_FOUND {
            get {
                return ResourceManager.GetString("DIRECTORY_NOT_FOUND", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Enabling TLS Connection ähnelt.
        /// </summary>
        internal static string ENABLING_TLS {
            get {
                return ResourceManager.GetString("ENABLING_TLS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Entering Extended Passive Mode (|||{0}|) ähnelt.
        /// </summary>
        internal static string ENTERING_EXTENDED_PASSIVE_MODE {
            get {
                return ResourceManager.GetString("ENTERING_EXTENDED_PASSIVE_MODE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Entering Passive Mode ({0},{1},{2},{3},{4},{5}) ähnelt.
        /// </summary>
        internal static string ENTERING_PASSIVE_MODE {
            get {
                return ResourceManager.GetString("ENTERING_PASSIVE_MODE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Extensions supported ähnelt.
        /// </summary>
        internal static string EXTENSIONS_SUPPORTED {
            get {
                return ResourceManager.GetString("EXTENSIONS_SUPPORTED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Requested file action okay, completed ähnelt.
        /// </summary>
        internal static string FILE_ACTION_COMPLETE {
            get {
                return ResourceManager.GetString("FILE_ACTION_COMPLETE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Requested file action not taken ähnelt.
        /// </summary>
        internal static string FILE_ACTION_NOT_TAKEN {
            get {
                return ResourceManager.GetString("FILE_ACTION_NOT_TAKEN", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die File not found ähnelt.
        /// </summary>
        internal static string FILE_NOT_FOUND {
            get {
                return ResourceManager.GetString("FILE_NOT_FOUND", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die User logged in ähnelt.
        /// </summary>
        internal static string LOGGED_IN {
            get {
                return ResourceManager.GetString("LOGGED_IN", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Need Two Factor Code ähnelt.
        /// </summary>
        internal static string NEED_TWO_FACTOR_CODE {
            get {
                return ResourceManager.GetString("NEED_TWO_FACTOR_CODE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Command not implemented ähnelt.
        /// </summary>
        internal static string NOT_IMPLEMENTED {
            get {
                return ResourceManager.GetString("NOT_IMPLEMENTED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Command not implemented for that parameter ähnelt.
        /// </summary>
        internal static string NOT_IMPLEMENTED_FOR_PARAMETER {
            get {
                return ResourceManager.GetString("NOT_IMPLEMENTED_FOR_PARAMETER", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Not logged in ähnelt.
        /// </summary>
        internal static string NOT_LOGGED_IN {
            get {
                return ResourceManager.GetString("NOT_LOGGED_IN", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die OK ähnelt.
        /// </summary>
        internal static string OK {
            get {
                return ResourceManager.GetString("OK", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Opening {0} mode data transfer for {1} ähnelt.
        /// </summary>
        internal static string OPENING_DATA_TRANSFER {
            get {
                return ResourceManager.GetString("OPENING_DATA_TRANSFER", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Parameter {0} not recogonized ähnelt.
        /// </summary>
        internal static string PARAMETER_NOT_RECOGNIZED {
            get {
                return ResourceManager.GetString("PARAMETER_NOT_RECOGNIZED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Service closing control connection ähnelt.
        /// </summary>
        internal static string QUIT {
            get {
                return ResourceManager.GetString("QUIT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Requested file action pending further information ähnelt.
        /// </summary>
        internal static string RENAME_FROM {
            get {
                return ResourceManager.GetString("RENAME_FROM", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Service ready for new user ähnelt.
        /// </summary>
        internal static string SERVICE_READY {
            get {
                return ResourceManager.GetString("SERVICE_READY", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Syntax error, command unrecognized. ähnelt.
        /// </summary>
        internal static string SYNTAX_ERROR {
            get {
                return ResourceManager.GetString("SYNTAX_ERROR", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die UNIX Type: L8 ähnelt.
        /// </summary>
        internal static string SYSTEM {
            get {
                return ResourceManager.GetString("SYSTEM", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Transfer aborted ähnelt.
        /// </summary>
        internal static string TRANSFER_ABORTED {
            get {
                return ResourceManager.GetString("TRANSFER_ABORTED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Closing data connection, transfer successful ähnelt.
        /// </summary>
        internal static string TRANSFER_SUCCESSFUL {
            get {
                return ResourceManager.GetString("TRANSFER_SUCCESSFUL", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Unable to open data connection ähnelt.
        /// </summary>
        internal static string UNABLE_TO_OPEN_DATA_CONNECTION {
            get {
                return ResourceManager.GetString("UNABLE_TO_OPEN_DATA_CONNECTION", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Username ok, need password ähnelt.
        /// </summary>
        internal static string USER_OK {
            get {
                return ResourceManager.GetString("USER_OK", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die UTF8 Encoding turned on ähnelt.
        /// </summary>
        internal static string UTF8_ENCODING_ON {
            get {
                return ResourceManager.GetString("UTF8_ENCODING_ON", resourceCulture);
            }
        }
    }
}
